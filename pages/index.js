import Head from "next/head";
import { Inter } from "@next/font/google";
import { Navbar } from "../components/Navbar";
import { useEffect, useState } from "react";
import { app, database, storage } from "@/firebaseConfig";
import { collection, addDoc } from "firebase/firestore";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import Image from "next/image";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [titleTrack, setTitleTrack] = useState("");
  const [rjName, setRjName] = useState("");
  const [dop, setDop] = useState("");
  const [audioFile, setAudioFile] = useState(null);
  const [percent, setPercent] = useState(0);

  const dbInstance = collection(database, "Podcast");

  async function handleOnSubmit() {
    if (!audioFile) {
      alert("Please choose a file first!");
    }

    const storageRef = ref(storage, `/files/${audioFile.name}`);
    const uploadTask = uploadBytesResumable(storageRef, audioFile);

    uploadTask.on(
      "state_changed",
      (snapshot) => {
        const percent = Math.round(
          (snapshot.bytesTransferred / snapshot.totalBytes) * 100
        ); // update progress

        setPercent(percent);
      },
      (err) => console.log(err),
      () => {
        // download url
        getDownloadURL(uploadTask.snapshot.ref).then((url) => {
          addDoc(dbInstance, {
            titleTrack,
            rjName,
            dop,
            fileUrl: url,
          }).then(() => {
            alert("Done with upload");
            window.location.href = "/";
          });
        });
      }
    );
  }
  return (
    <>
      <Head>
        <title>Reva Dhwani</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.png" />
      </Head>

      <main>
        <div className="h-screen w-screen flex flex-col justify-center items-center ">
          {/* <div className="fixed top-0 right-0 w-full h-36 flex">
            <div className="absolute h-28 w-36">
              <Image src="/logo.png" fill={true} />
            </div>
          </div> */}
          <div className="h-3/4 w-1/2 p-5 border-2 border-black rounded-md flex flex-col">
            <div className="text-5xl text-center">REVA Dhwani</div>
            <div className="h-20" />

            <div className="flex flex-col px-10">
              <div className="w-full flex justify-between">
                <div className="font-bold">Track Title</div>
                <input
                  className="border-2 border-black"
                  type="text"
                  value={titleTrack}
                  onChange={(e) => {
                    setTitleTrack(e.target.value);
                  }}
                />
              </div>
              <div className="h-5" />
              <div className="w-full flex justify-between">
                <label className="font-bold">RJ Name</label>
                <input
                  className="border-2 border-black"
                  type="text"
                  value={rjName}
                  onChange={(e) => {
                    setRjName(e.target.value);
                  }}
                />
              </div>
              <div className="h-5" />
              <div className="w-full flex justify-between">
                <label className="font-bold">Title Date </label>
                <input
                  className="border-2 border-black"
                  type="date"
                  value={dop}
                  onChange={(e) => {
                    setDop(e.target.value);
                  }}
                />
              </div>
              <div className="h-5" />
              <div className="w-full flex justify-between">
                <label className="font-bold">Choose file</label>
                <input
                  className="border-2 border-black"
                  type="file"
                  accept="audio/*"
                  onChange={(e) => {
                    setAudioFile(e.target.files[0]);
                  }}
                />
                {percent}%
              </div>
              <div className="h-7" />
              <button
                className="w-24 p-3 border border-black hover:bg-slate-300 rounded-md self-center"
                onClick={async () => {
                  await handleOnSubmit();
                }}
              >
                Submit
              </button>

              {/* <p>{percent} % done</p> */}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
